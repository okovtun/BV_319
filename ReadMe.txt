https://github.com/okovtun/BV_319.git
https://www.youtube.com/playlist?list=PLeqyOOqxeiIMAsBCAT2iL0nEHONChw0yJ
https://chat.whatsapp.com/Gf03mZKDUqx3g9nMEOEpjn

Book:
https://empyreal96.github.io/nt-info-depot/Windows-Internals-PDFs/Windows%20System%20Internals%207e%20Part%201.pdf

TODO:
!!!Разобрать Палиндром!!!

////////////////////////////////////////////////////////////////////////
////////////				  Pointers						////////////
////////////////////////////////////////////////////////////////////////

TODO:
1. Вывести двумерный динамические массив на экран используя арифметику указателей
   и оператор разыменования;

2. В проект 'DynamicMemory' добавить следующие функции:
	??? Allocate(???);	//Выделяет память для двумерного линамического массива	DONE
	??? Clear(???);		//Удаляет двумерный динамический массив из памяти		DONE

	??? push_row_back(???);	//добавляет строку в конец двумерного динамического массива				DONE
	??? push_row_front(???);//добавляет строку в начало двумерного динамического массива			DONE
	??? insert_row(???);	//вставляет строку в двумерный динамический массив по заданному индексу	DONE

	??? pop_row_back(???);	//удаляет последнюю строку							DONE
	??? pop_row_front(???);	//удаляет нулевую строку
	??? erase_row(???);		//удаляет строку по заданному индексу
	
	??? push_col_back(???);	//добавляет столбец в конец двумерного динамического массива			DONE
	??? push_col_front(???);//добавляет столбец в начало двумерного динамического массива
	??? insert_col(???);	//вставляет столбец в двумерный динамический массив по заданному индексу

	??? pop_col_back(???);	//удаляет последнюю столбец
	??? pop_col_front(???);	//удаляет нулевую столбец
	??? erase_col(???);		//удаляет столбец по заданному индексу

3. !!!! СДЕЛАТЬ COMMIT	!!!!
   !!!! От ветки 'master' создать ветку 'DynamicTemplated' !!!!, 
   и в ней шаблонизировать все функции для работы с динамическими массивами,
   так же проветрить эти функции на типах: 'double' и 'char';

DONE:
1. В проект 'DynamicMemory' добавить следующие функции:
	??? push_front(???);
	??? insert(???);	//добавляет значение по указанному индексу

	??? pop_back(???);	//удаляет последний элемент массива
	??? pop_front(???);	//удаляет нулевой элемент массива
	??? erase(???);		//удаляет элемент массива по указанному индексу

	Stack - это модель памяти, из которой последний записанный элемент считывается первым.
	push - помещает элемент на вершину стека;
	pop  - считывает вершину стека, и удаляет ее;

DONE:
1. Выяснить, есть ли у статических массивов начальная и конечная метка в памяти;
2. Добавить значение в конец динамического массива;

DONE:
0.	!!!!!!!		ВЫУЧИТЬ ТЕОРИЮ ПО УКАЗАТЕЛЯМ И ПЕРЕДАЧЕ ПАРАМЕТРОВ	!!!!!!!
1. В Solution 'Pointers' добавить проект 'Split', и в этом проекте,
   массив из 10 элементов разделить на два массива минимально возможного размера:
   even[] и odd[]. Массив even[] должен содержать все четные значения из исходного массива,
   а odd[] - все нечетные значения.

////////////////////////////////////////////////////////////////////////
////////////				  Functions						////////////
////////////////////////////////////////////////////////////////////////

TODO:
Собрать и проветрить *.lib-файл;

DONE:
1. В ветке 'FunctionTemplates' перегрузить все функции для двумерных массивов,
   функцию FillRand() перегрузить для двумерных массивов типа 'int', 'double' и 'char';
2. Сделать commit и залить его на GitHub;
3. От ветки 'FunctionTemplates' создать ветку 'SeparatedTemplates'
   и вынести шаблонные функции в отдельные файлы;

//2D overloading in progress
DONE:
Перегрузить все функции для двумерных массивов 'int', 'double' и 'char';

DONE:
На ветке 'FunctionsOverloading' перегрузить все функции для типов данных 'double' и 'char';

DONE:
0. !!!!!!!!!!!!!!!!	ВЫУЧИТЬ ТЕОРИЮ ПО ФУНКЦИЯМ	!!!!!!!!!!!!!!!!!!
1. В проект 'Functions\Arrays' добавить следующие функции:
	??? Sum(???);			//возвращает сумму элементов массива					DONE
	??? Avg(???);			//возвращает среднее-арифметическое элементов массива	DONE
	??? minValueIn(???);	//возвращает минимальное значение в массиве				DONE
	??? maxValueIn(???);	//возвращает максимальное значение в массиве			DONE
	??? shiftLeft(???);		//сдвигает массив на заданное число элементов влево		DONE
	??? shiftRight(???);	//сдвигает массив на заданное число элементов вправо	DONE

DONE:
0.  !!!!!!!!!!!!!!!!	ВЫУЧИТЬ ТЕОРИЮ ПО ФУНКЦИЯМ	!!!!!!!!!!!!!!!!!!
1. В проекте 'Functions' написать функцию ??? Factorial(???), которая	DONE
   принимает число, и возвращает факториал этого числа;
2. В проекте 'Functions' написать функцию ??? Power(???), которая возводит число в степень;

////////////////////////////////////////////////////////////////////////
////////////					ARRAYS						////////////
////////////////////////////////////////////////////////////////////////

TODO:
Есть массив из 10 элементов, заполненный случайными числами в диапазоне от 0 до 7.
Нужно найти в этом массиве повторяющиеся значения, вывести их на экран, и вывести
на экран количество повторений каждого значения.
Задачу решить в проекте 'Arrays\Search'

DONE:
1. При вводе минимального и максимального случайного числа предусмотреть возможные ошибки;			DONE
2. В Solution 'Arrays' добавить проект 'Unique' и в этом проекте заполнить массив из 10 элементов	DONE
   уникальными случайными числами в диапазоне от 20 до 30;

DONE:
При переводе в Hex применить тернарный оператор.

DONE:
1. Зарегистрировать Google-почту;
2. Зарегистрироваться в Discord: https://discord.com/;
3. В проекте 'Shift' выполнить циклический сдвиг массива вправо;
4. В Solution 'Arrays' добавить проект 'Binary' и в этом проекте,
   десятичное число, введенное с клавиатуры перевести в 
   двоичную систему счисления;

TODO:
В Solution 'Arrays' добавить проект 'Shift' и в этом проекте есть массив из 10 элементов,
проинициализированный значениями от 0 до 9. Нужно выполнить циклический сдвиг этого массива
на заданное число элементов влево. Количество сдвигов пользователь вводит с клавиатуры.

0	1	1	2	3	5	8	13	21	34
1	1	2	3	5	8	13	21	34	 0
1	2	3	5	8	13	21	34	 0	 1
2	3	5	8	13	21	34	 0	 1	 1
3	5	8	13	21	34	 0	 1	 1	 2

DONE:
В проекте 'Arrays' написать код, который:
	-позволяет ввести элементы массива с клавиатуры;
	-выводит массив на экран в прямом порядке (от 0-го элемента до последнего);
	-выводит массив на экран в обратном порядке (от последнего элемента до 0-го);
	-вычисляет сумму элементов массива;
	-вычисляет среднее-арифметическое элементов массива;
	-находит минимальное и максимальное значение в массиве;
!!!	ВСЕ ЭТИ МАНИПУЛЯЦИИ ПРОВОДЯТСЯ С ОДНИМ МАССИВОМ, т.е., 
ДЛЯ КАЖДОЙ ЗАДАЧИ НЕ НУЖНО СОЗДАВАТЬ ОТДЕЛЬНЫЙ МАССИВ	!!!

////////////////////////////////////////////////////////////////////////
////////////				CONTROL STRUCTURES				////////////
////////////////////////////////////////////////////////////////////////

DONE:
1. https://github.com/okovtun/BV_011/blob/master/ControlStructures/Geometria/Task/ChessBoard.jpg	DONE
2. https://github.com/okovtun/BV_011/blob/master/ControlStructures/Geometria/Task/HardChess.jpg		DONE
3. Вывести в консоль треугольник Паскаля заданной высоты, которую пользователь вводит с клавиатуры;	DONE
4. Вывести на экран HardChess, используя всего два цикла;
5. Зарегистрироваться на github.com;						DONE

DONE:
1. Добить геометрию:
	https://github.com/okovtun/BV_011/blob/master/ControlStructures/Geometria/Task/Geometria1.txt
2. *Вывести ромбик на экран, используя всего один основной цикл;
3. *Вывести ромбик на экран, используя всего два цикла - один основной, и один вложенный;
4. Поменять местами две переменные;
5. Вычислить максимально-возможный объем диска для LBA-28 и LBA-48;

DONE:
1. https://www.crucial.com/articles/about-ssd/m2-with-pcie-or-sata#:~:text=2%20slot.-,The%20M.,%2C%2080%2C%20or%20110%20millimeters.
2. Почитать про RAID-массивы:
	RAID-0
	RAID-1
	RAID-5
	RAID-6
	RAID-10

DONE:
https://rlab.ru/doc/hdd_from_inside.html

DONE:
В Solution 'ControlStructures' добавить проект 'Geometry' и в этом проекте
вывести в консоль все фигуры из файла:
	https://github.com/okovtun/BV_011/blob/master/ControlStructures/Geometria/Task/Geometria1.txt
Размер фигуры пользователь вводит с клавиатуры.

DONE:
1. Почитать про "Длинную арифметику";
2. С клавиатуры вводится предельное число, и программа выводит на экран ряд простых чисел	DONE
   до заданного предела.
   Простым называется число, которое делиться только на себя и на единицу:
	3	5	7	11	13	17	23 ......
3. Вывести на экран таблицу умножения;				DONE
4. Вывести на экран таблицу Пафагора, при выводе единицы должны быть над единицами, а не над десятками;

DONE:
https://www.intel.com/content/www/us/en/support/articles/000059657/processors/intel-xeon-processors.html?wapkw=xeon%20gold%206246(r)
Собрать сервер


DONE:
В проекте 'FOR' решить следующие задачи:
1. С клавиатуры вводится число, и программа вычисляет факториал этого числа.			DONE
   Факториал - это произведение ряда чисел от 1 до указанного, например:
	5! = 1*2*3*4*5 = 120;

2. С клавиатуры вводится основание и показатель степени, и программа вычисляет степень числа.	DONE
   Степень, это умножение числа самого на себя.
   Основание степени - это число, которое умножается само на себя.
   Показатель степени - это число, которое показывает, сколько раз основание умножается само на себя.
   Степень - это результат возведения в степень.

3. Вывести на экран таблицу ASCII-символов, по 16 символов в строке.							DONE
   Символы должны быть разделены одним пробелом.

4. С клавиатуры вводится число, и программа выводит на экран ряд Фибоначчи, до введенного числа.DONE
   Ряд Фибоначчи можно построить из двух чисел 0 и 1, каждый следующий член ряда - это сумма двух предыдущих членов, например:
	0	1	1	2	3	5	8	13	 21

5. С клавиатуры вводится число, и программа выводит на экран заданное количество чисел из ряда Фибоначчи;

TODO:
https://ru.gecid.com/power/sovremennyee_bloki_pitaniya_atx_i_ih_harakteristiki/

DONE:
1. Написать программу "Калькулятор", которая вычисляет выражения вида:
	2 + 3;
2. Пользователь вводит число, а программа говорит, является ли это число палиндромом.
   Палиндром - это число, которое чистается одинаково, как слева направо, так и справа налево,
   например:
   12321
   1221
   121
   2
3. В Solution 'ControlStructures' добавить проект 'Shooter', и в этом проекте реализовать Shooter,
   который выводит на экран действие, согласно нажатой клавиши:
	w - вперед;
	s - назад;
	a - налево;
	d - направо;
	space - прыжок;
	enter - огонь;
	escape - выход;
   Если пользователь нажал не ту клавишу, на экран выводится 'Error'.

TODO:
Изучить шину USB:
1. Архитектура;
2. Разъемы;
3. Пропускные способности;
4. Версии стандарта;

DONE:
Повторить всю теорию по операторам и типам данных.

DONE:
В итернет-магазине Citilink или DNS (на Ваше усмотрение) выьрать материнскую плату с сокетом LGA-1700.
Бюджет не ограничен.

DONE:
Следующие задачи нужно решить без компилятора:
1. Что будет выведено на экран:
	int i = 3;
	i = ++i + ++i;
	cout << i << endl;
2. Что будет выведено на экран:
	int i = 3;
	i = i++ + ++i;
	cout << i << endl;
3. Что будет выведено на экран:
	int i = 3;
	i = i++ + 1 + ++i * 2;
	cout << i << endl;
4. Что будет выведено на экран:
	int i = 3;
	i = i++ + 1 + ++i *= 2;
	cout << i << endl;
5. Что будет выведено на экран:
	int i = 3;
	i += i++ + 1 + ++i *= 2;
	cout << i << endl;
6. Что будет выведено на экран:
	int i = 3;
	i *= i++ + 1 + ++i += 2;
	cout << i << endl;


TOREAD:
https://legacy.cplusplus.com/doc/tutorial/constants/
https://www.youtube.com/watch?v=R2fauhD8sgY

Фазы питания:
https://www.youtube.com/watch?v=EaWCnEf8mAE&t=247s

TODO:
1. https://www.chipdip.ru/info/import-ic-packages
2. !!! НЕ ПОВТОРЯЙТЕ ЭТОТ ТРЮК В ДОМАШНИХ УСЛОВИЯХ !!!
	https://www.chipdip.ru/info/import-ic-packages
	https://www.youtube.com/watch?v=XXs0I5kuoX4
	https://www.youtube.com/watch?v=rtWrRYzh45g
	https://www.youtube.com/watch?v=ZuzSx0HmpR0
	https://www.youtube.com/watch?v=kz08QeNjirI
	https://www.youtube.com/watch?v=9c8lqdr5UiM
	https://www.youtube.com/watch?v=3TkWiy837V4
	https://www.youtube.com/watch?v=sl0VrsXhDn4

DONE:
1. Используя программу AIDA-64 измерить производительность Cache-памяти своего CPU;
	https://www.aida64.com/downloads/NDMxOTNlNGY=
2. https://www.youtube.com/watch?v=KCpVW6OKPwA;
3. Что такое "Tick-Tack"?

TODO:
1. Повторяем всю теорию!!!
2. Решить все задачи из файла:
	https://github.com/okovtun/BV_319/blob/master/DataTypes/DataTypes/VariablesTask.pdf
	Если первая задача не получается, пропускаем ее и идем дальше.

TODO:
https://www.youtube.com/watch?v=G4lcA2d5m2E
https://www.youtube.com/watch?v=z0jQZxH7NgM

TODO:
Вывести в консоль объем занимаемой памяти и диапазон принимаемых значений для всех целочисленных типов данных,
таким образом, как это было сделано для 'int'.

TODO:
Пока учим теорию!!!
https://www.ixbt.com/cpu/x86-cpu-faq-2006.shtml
http://www.softelectro.ru/ieee754.html

DONE:
Используя Escape-последовательности вывести в консоль стишок "В лесу родилась Ёлочка".
Стишок должен быть выровнен по середине окна консоли, 
и его куплеты должны быть разделены пустой строкой.

TODO:
1. Выучить теорию!!!
2. Для каждого поколения памяти найти техпроцесс и напряжение питания микросхем;
3. Почитать:
	https://www.ixbt.com/mainboard/ddr2-rmma.shtml
	https://www.ixbt.com/mainboard/ddr3-rmma.shtml